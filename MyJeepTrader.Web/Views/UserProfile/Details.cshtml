@model MyJeepTrader.Web.ViewModels.UserProfileDetailsViewModel

@{
    ViewBag.Title = "User Profile";
}

<div class="row">
    <div class="col-lg-6 well well-small" id="column1">
        <div class="form-group-sm">
            <h2>Profile</h2>
            <div class="form-horizontal">
                <div>
                    <div class="form-group">
                        <div class="col-md-8">
                            @if (Model.Avatar != null)
                            {
                                <img src="@Url.Action( "ShowAvatar", "UserProfile", new { UserName = Request.QueryString["UserName"] } )" alt="Image Unavailable" width="87" class="img-circle" />
                            }
                            else
                            {
                                <img src="~/Images/placeholder.jpg" width="87" height="85" class="img-circle" />
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Profile Views: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.ViewCount)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Name: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.FirstName) @Html.DisplayFor(m => m.LastName)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Birthday: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.BirthDate, "{0:MM/dd/yyyy}")
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">About You: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.Description)
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-group-sm">
                <h2>Social Networks</h2>
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-3">Facebook: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.Facebook)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Google +: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.GooglePlus)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Ello: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.Ello)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">My Website: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.Website)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Instagram: </label>
                        <div class="col-md-8">
                            @Html.DisplayFor(m => m.Instagram)
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="col-sm-12 col-md-12 col-lg-12">
                <h2>Posts</h2>
                <div class="form-horizontal">
                    @foreach (var stream in Model.UserPosts)
                    {
                        <div id="divLiveStream" class="Posts">
                            <div class="row">
                                <label class="hidden">@stream.PostId</label>
                                <div class="col-md-2">
                                    <div class="ui-icon-image">
                                        @if (stream.Avatar != null)
                                        {
                                            <img src="@Url.Action("ShowAvatar", "Home", new { UserName = @stream.UserName})" alt="Image Unavailable" class="img-circle streamImage" />
                                        }
                                        else
                                        {
                                            <img src="~/Images/placeholder.jpg" width="87" height="85" class="img-circle streamImage" />
                                        }
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="text-left row">
                                        <div class="col-md-12">
                                            <label id="lblUserName">@stream.UserName</label>
                                        </div>
                                        <div class="col-md-12">
                                            @stream.PostDescription
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="dropdown pull-right">
                                        <a class="btn-link" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"><span class="glyphicon glyphicon-option-horizontal"></span></a>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                            <li><a id="aFullPost" onclick="RedirectToPost('@stream.PostId')" class="fullPost"><span class="glyphicon glyphicon-eye-open">&nbsp;<label>View</label></span></a></li>
                                            <li><a id="aAddFriend" onclick="AddFriend('@stream.UserName')" class="addFriend"><span class="glyphicon glyphicon-plus">&nbsp;<label>Follow </label></span></a></li>
                                            <li><a id="aDirectMessage"><span class="glyphicon glyphicon-envelope">&nbsp;<label>Message</label></span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 well well-small" id="column2">
        <div class="form-group-sm">
            <h2>Primary Jeep</h2>
            <div class="form-horizontal">
                <div>
                    <div class="form-group">
                        <div class="col-md-8">
                            @if (Model.Image != null)
                            {
                                <img src="@Url.Action("ShowJeepImage", "UserProfile", new { UserName = Request.QueryString["UserName"] })" alt="Image Unavailable" width="87" height="85" class="img-circle" />
                            }
                            else
                            {
                                <img src="~/Images/placeholder.jpg" width="87" height="85" class="img-circle" />

                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Make: </label>@Html.DisplayFor(m => m.Make)
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Model: </label>@Html.DisplayFor(m => m.Model)
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Year: </label>@Html.DisplayFor(m => m.Year)
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Description: </label>@Html.DisplayFor(m => m.JeepDescription)
                    </div>
                    <div class="form-group">
                        <div class="col-md-8">
                            @Html.ActionLink("View All", "AllJeepProfiles", "JeepProfile", new { UserName = Request.QueryString["UserName"] }, new { })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group-sm">
            <h2>Recent Post</h2>
            <div class="form-horizontal">
                <div>
                    <div class="hidden">
                        @Html.TextAreaFor(m => m.RecentPost.PostId)
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Title: </label>@Html.DisplayFor(m => m.RecentPost.PostTitle)
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Type: </label> @Html.DisplayFor(m => m.RecentPost.PostType)
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3">Description: </label> @Html.DisplayFor(m => m.RecentPost.PostDescription)
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="col-sm-12 col-md-12 col-lg-12">
            <h2>Status</h2>
            @if (Model.BlockedUsers.Contains(User.Identity.Name) || Model.Settings.PrivateStatus == true && !Model.AllowedUsers.Contains(User.Identity.Name))
            {
                <div class="form-group">
                    <label>This User's Status' are Currenlty Set to Private.</label>
                </div>
            }
            else if(Model.AllowedUsers.Contains(User.Identity.Name) || Model.Settings.PrivateStatus == false)
            {
                <div class="form-horizontal">
                    @foreach (var stream in Model.UsersStatus)
                    {
                        <div id="divLiveStream" class="Status">
                            <div class="row">
                                <label class="hidden">@stream.StatusId</label>
                                <div class="col-md-2">
                                    <div class="ui-icon-image">
                                        @if (stream.Avatar != null)
                                        {
                                            <img src="@Url.Action("ShowAvatar", "Home", new { UserName = @stream.UserName})" alt="Image Unavailable" class="img-circle streamImage" />
                                        }
                                        else
                                        {
                                            <img src="~/Images/placeholder.jpg" width="87" height="85" class="img-circle streamImage" />
                                        }
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="text-left row">
                                        <div class="col-md-12">
                                            <label id="lblUserName">@stream.UserName</label>
                                        </div>
                                        <div class="col-md-12">
                                            @stream.Status
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    @if (stream.LikeCount == 0)
                                    {
                                        <a class="likeCount" onclick="UpdateLikeCount('@stream.StatusId')"><span class="glyphicon glyphicon-heart-empty"></span></a>
                                    }
                                    else
                                    {
                                        <a class="likeCount" onclick="UpdateLikeCount('@stream.StatusId')"><span class="glyphicon glyphicon-heart"></span></a>
                                    }
                                    &nbsp;
                                    <a onclick="UpdateLikeCount('@stream.StatusId')"><span><label id="lblLikeCount">@stream.LikeCount</label></span></a>
                                    &nbsp;
                                    <a onclick="UpdateDislikeCount('@stream.StatusId')"><span class="glyphicon glyphicon-thumbs-down"></span></a>
                                    &nbsp;
                                    <a onclick="UpdateDislikeCount('@stream.StatusId')"><span><label id="lblDislikeCount">@stream.DislikeCount</label></span></a>
                                </div>
                                <div class="col-lg-6">
                                    <div class="dropdown pull-right">
                                        <a class="btn-link" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"><span class="glyphicon glyphicon-option-horizontal"></span></a>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                            <li><a id="aComment"><span class="glyphicon glyphicon-comment">&nbsp;<label>Comment</label></span></a></li>
                                            <li><a id="aAddFriend" onclick="AddFriend('@stream.UserName')" class="addFriend"><span class="glyphicon glyphicon-plus">&nbsp;<label>Follow </label></span></a></li>
                                            <li><a id="aDirectMessage"><span class="glyphicon glyphicon-envelope">&nbsp;<label>Message</label></span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
<script>
    $('.Posts').dblclick(function () {
        var postId = $(this).data("post");
        RedirectToPost(postId);
    });

    function AddFriend(friendName) {

        var data = {
            friendName: friendName
        };

        $.ajax({
            type: 'POST',
            url: '/Home/AddFriend',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#divSuccess').show();
                $('#spanSuccessMessage').html("Settings Saved Successfully!");
            }
        });
    }

    function RedirectToPost(postId) {
        window.location.href = '/Post/Details?PostId=' + postId;
    }

    function UpdateLikeCount(statusId) {

        var data = {
            statusId: statusId
        }

        $.ajax({
            type: 'POST',
            url: '/Webservices/FriendManagementWebService.asmx/UpdateLikeCount',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (result) {
                $('#lblLikeCount').text(result.d);
            },
            error: function (errorThrown) {
                console.log(errorThrown);
            }
        });
    }

    function UpdateDislikeCount(statusId) {
        var data = {
            statusId: statusId
        }

        $.ajax({
            type: 'POST',
            url: '/Webservices/FriendManagementWebService.asmx/UpdateDislikeCount',
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (result) {
                $('#lblDislikeCount').text(result.d);
            },
            error: function (errorThrown) {
                console.log(errorThrown);
            }
        });
    }
</script>